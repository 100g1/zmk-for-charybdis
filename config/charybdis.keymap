#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <250>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb_bubble {
            bindings = <&bubble_macro>;
            key-positions = <21 22>;
            layers = <0>;
        };

        comb_cv {
            bindings = <&kp LC(C)>;
            key-positions = <39 40>;
            require-prior-idle-ms = <2>;
            timeout-ms = <2>;
            layers = <0>;
        };

        comb_vb {
            bindings = <&kp LC(V)>;
            key-positions = <40 41>;
            require-prior-idle-ms = <2>;
            timeout-ms = <2>;
            layers = <0>;
        };

        comb_zx {
            bindings = <&kp LC(Z)>;
            key-positions = <37 38>;
            require-prior-idle-ms = <2>;
            timeout-ms = <2>;
            layers = <0>;
        };

        comb_xc {
            bindings = <&kp LC(X)>;
            key-positions = <38 39>;
            require-prior-idle-ms = <2>;
            timeout-ms = <2>;
            layers = <0>;
        };

        comb_sd {
            bindings = <&kp LA(S)>;
            key-positions = <27 26>;
            layers = <2>;
        };
    };

    macros {
        red_macro: red_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(M) &kp R>;
            label = "RED_MACRO";
        };

        black_macro: black_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(M) &kp K>;
            label = "BLACK_MACRO";
        };

        add_macro: add_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(N) &kp N>;
            label = "ADD_MACRO";
        };

        bubble_macro: bubble_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "BUBBLE_MACRO";
        };

        table_macro: table_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(N) &kp T>;
            label = "TABLE_MACRO";
        };
    };

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&none  &none             &none        &none           &none           &none        &none      &none          &none      &none    &none      &none
&none  &kp Q             &kp W        &kp E           &kp R           &kp T        &kp Y      &kp U          &kp I      &kp O    &kp P      &none
&none  &mt LEFT_SHIFT A  &mt LCTRL S  &mt LEFT_ALT D  &mt LEFT_WIN F  &lt 3 G      &kp H      &kp J          &kp K      &kp L    &kp SQT    &none
&none  &kp Z             &kp X        &kp C           &kp V           &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &kp SLASH  &none
                                      &mo 2           &mo 1           &kp SPACE    &kp ENTER  &kp BACKSPACE
                                                      &none           &none        &none
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        nav_num {
            bindings = <
&trans  &trans          &trans        &trans     &trans        &trans                               &trans                       &trans                     &trans                     &trans                     &trans  &trans
&trans  &sk LEFT_SHIFT  &kp UP_ARROW  &sk LCTRL  &kp LEFT_GUI  &mt LS(GRAVE) GRAVE                  &mt LS(MINUS) MINUS          &mt LS(N7) N7              &mt LS(N8) N8              &mt LS(N9) N9              &trans  &trans
&trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans        &mt LS(LEFT_BRACKET) LEFT_BRACKET    &mt LS(EQUAL) EQUAL          &mt LS(NUMBER_4) NUMBER_4  &mt LS(N5) N5              &mt LS(NUMBER_6) NUMBER_6  &trans  &trans
&trans  &trans          &trans        &trans     &trans        &mt LS(RIGHT_BRACKET) RBKT           &mt LS(SEMICOLON) SEMICOLON  &mt LS(NUMBER_1) NUMBER_1  &mt LS(NUMBER_2) NUMBER_2  &mt LS(NUMBER_3) NUMBER_3  &trans  &trans
                                      &trans     &trans        &trans                               &kp TAB                      &mt LS(N0) N0
                                                 &trans        &trans                               &trans
            >;
        };

        hwp {
            bindings = <
&trans  &trans  &trans  &trans  &trans      &trans          &trans      &trans  &trans        &trans  &trans       &trans
&trans  &trans  &trans  &trans  &red_macro  &table_macro    &trans      &trans  &trans        &trans  &trans       &trans
&trans  &trans  &trans  &trans  &trans      &trans          &trans      &trans  &black_macro  &trans  &kp LA(INS)  &trans
&trans  &trans  &trans  &trans  &trans      &trans          &add_macro  &trans  &trans        &trans  &trans       &trans
                        &trans  &trans      &trans          &trans      &trans
                                &trans      &trans          &trans
            >;
        };

        fn {
            bindings = <
&trans  &trans          &trans        &trans        &trans        &trans    &trans     &trans     &trans     &trans  &trans       &trans
&trans  &kp F1          &kp F2        &kp F3        &kp F4        &kp F5    &kp F6     &kp F7     &kp F8     &kp F9  &kp F10      &trans
&trans  &bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &trans    &mkp MB4   &mkp MB5   &trans     &trans  &trans       &trans
&trans  &bootloader     &trans        &trans        &trans        &trans    &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans  &bootloader  &trans
                                      &trans        &trans        &trans    &trans     &trans
                                                    &trans        &trans    &trans
            >;
        };
    };
};
